One approach to address the issue is to avoid nested calculations within the `calc()` function. Instead, break down the calculation into smaller, simpler steps. For example, the calculation `width: calc(50% - 20px);` could be broken down into two steps:

1. Set a variable (e.g., using CSS variables/custom properties) to represent 50% of the parent's width.
2. Subtract 20px from that variable to get the final width.

```css
:root {
  --parent-width: 50%;
}

.element {
  width: calc(var(--parent-width) - 20px);
}
```

This approach increases readability and might help resolve calculation inconsistencies. If the issue persists, consider using JavaScript to perform more complex calculations and dynamically apply the width to the element.